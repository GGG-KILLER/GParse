// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project. Project-level
// suppressions either have no target or are given a specific
// target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "IDE0018:Inline variable declaration", Justification = "Would be unreadable", Scope = "member", Target = "~M:GParse.Parsing.LexerBase.Lex~System.Collections.Generic.IEnumerable{GParse.Parsing.Token}" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.LexerBase.charSettings" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.LexerBase.consumeNewlinesAutomatically" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.LexerBase.numberSettings" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.LexerBase.storeWhitespaces" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.LexerBase.stringSettings" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.LexerBase.whitespaceID" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.CharLexSettings.BinaryEscapeMaxLengh" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.CharLexSettings.BinaryEscapePrefix" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.CharLexSettings.DecimalEscapeMaxLengh" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.CharLexSettings.DecimalEscapeMaxValue" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.CharLexSettings.DecimalEscapePrefix" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.CharLexSettings.HexadecimalEscapeMaxLengh" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.CharLexSettings.HexadecimalEscapePrefix" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.CharLexSettings.OctalEscapeMaxLengh" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.CharLexSettings.OctalEscapePrefix" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.IntegerLexSettings.BinaryPrefix" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.IntegerLexSettings.DecimalPrefix" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.IntegerLexSettings.DefaultType" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.IntegerLexSettings.HexadecimalPrefix" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.IntegerLexSettings.OctalPrefix" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.StringLexSettings.CharSettings" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Usage", "CC0074:Make field readonly", Justification = "<Pending>", Scope = "member", Target = "~F:GParse.Parsing.Settings.StringLexSettings.NewlineEscape" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "CC0013:Use ternary operator", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.RegexParser.ParseAtomic~GParse.Parsing.Lexing.Modules.Regex.AST.Node" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.RegexParser.ParseAtomic~GParse.Parsing.Lexing.Modules.Regex.AST.Node" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.RegexRunner.Visit(GParse.Parsing.Lexing.Modules.Regex.AST.Range)~System.String" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "CC0013:Use ternary operator", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.RegexRunner.Visit(GParse.Parsing.Lexing.Modules.Regex.AST.Range)~System.String" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "CC0013:Use ternary operator", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.RegexWriter.Visit(GParse.Parsing.Lexing.Modules.Regex.AST.Alternation)~System.String" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.RegexWriter.Visit(GParse.Parsing.Lexing.Modules.Regex.AST.Alternation)~System.String" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.AST.RegexClassTree.FindClass(GParse.Common.IO.SourceCodeReader,System.Int32)~GParse.Parsing.Lexing.Modules.Regex.AST.Node" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "CC0013:Use ternary operator", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.AST.RegexClassTree.FindClass(GParse.Common.IO.SourceCodeReader,System.Int32)~GParse.Parsing.Lexing.Modules.Regex.AST.Node" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "CC0013:Use ternary operator", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.RegexParser.ParseLiteral(System.Boolean)~GParse.Parsing.Lexing.Modules.Regex.AST.Node" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.RegexParser.ParseLiteral(System.Boolean)~GParse.Parsing.Lexing.Modules.Regex.AST.Node" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "IDE0007:Use implicit type", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.RegexWriter.#cctor" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.RegexRunner.Visit(GParse.Parsing.Lexing.Modules.Regex.AST.Range)~GParse.Parsing.Lexing.Modules.Regex.Runner.Result{System.String,GParse.Parsing.Lexing.Modules.Regex.Runner.MatchError}" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Design", "CC0120:Your Switch maybe include default clause", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.RegexWriter.Visit(GParse.Parsing.Lexing.Modules.Regex.AST.Literal)~System.String" )]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage ( "Design", "CC0120:Your Switch maybe include default clause", Justification = "<Pending>", Scope = "member", Target = "~M:GParse.Parsing.Lexing.Modules.Regex.RegexParser.ParseLiteral(System.Boolean)~GParse.Parsing.Lexing.Modules.Regex.AST.Node" )]

